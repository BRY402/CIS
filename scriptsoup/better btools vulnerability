local btools,Classes,owner = loadstring(game:HttpGet("https://github.com/BRY402/vsb/raw/main/scriptsoup/btools%20vulnerability.lua"))()
local env = {}
env.Instance = {new = function(cn,parent)
if cn == "Normal" or cn == "Truss" or cn == "Wedge" or cn == "Corner" or cn == "Cylinder" or cn == "Ball" or cn == "Seat" or cn == "Vehicle Seat" then
local rp = btools.new(cn,parent)
local rt = {}
function rt:Destroy()
btools.destroy(rp)
end
function rt:Clone(parent)
return btools.Clone({rp},parent)
end
function rt:Export()
return btools.Export({rp})
end
local p = setmetatable(rt,{__newindex = function(self,i,v)
if i == "Size" then
btools.Resize({rp},v)
elseif i == "Color" or i == "BrickColor" then
btools.Color({rp},v)
elseif i == "Position" or i == "CFrame" then
btools.Move({rp},v)
elseif i == "Orientation" then
btools.Rotate({rp},v)
elseif i == "Transparency" or i == "Reflection" or i == "Material" then
btools.SetPartProperties({rp},{[i] = v})
elseif i == "Anchored" then
btools.SetAnchored({rp},v)
elseif i == "CanCollide" then
btools.SetCanCollide({rp},v)
elseif i == "Locked" then
btools.SetLocked({rp},v)
elseif i == "Name" then
btools.SetName({rp},v)
elseif i == "FrontSurface" or i == "BackSurface" or i == "TopSurface" or i == "BottomSurface" or i == "LeftSurface" or i == "RightSurface" then
btools.SetSurface({rp},{[i] = v})
end
end,
__metatable = "This metatable is locked"})
return p
elseif cn == "SpotLight" or cn == "PointLight" or cn == "SurfaceLight" then
btools.newlight({parent},cn)
local rt = {}
function rt:Destroy()
btools.destroy(rp)
end
function rt:Export()
return btools.Export({rp})
end
local l = setmetatable(rt,{__newindex = function(self,i,v)
btools.SetLightingProperties({parent},cn,{[i] = v})
end})
return l
elseif cn == "Mesh" then
btools.newmesh({parent},cn)
local rt = {}
function rt:Destroy()
btools.destroy(rp)
end
function rt:Export()
return btools.Export({rp})
end
local m = setmetatable(rt,{__newindex = function(self,i,v)
btools.SetMeshProperties({parent},cn,{[i] = v})
end})
return m
elseif cn == "Texture" or cn == "Decal" then
btools.newtexture({parent},cn)
local rt = {}
function rt:Destroy()
btools.destroy(rp)
end
function rt:Export()
return btools.Export({rp})
end
local t = setmetatable(rt,{__newindex = function(self,i,v)
btools.SetTextureProperties({parent},cn,{[i] = v})
end})
return t
elseif cn == "Fire" or cn == "Smoke" or cn == "Sparkles" then
btools.neweffect({parent},cn)
local rt = {}
function rt:Destroy()
btools.destroy(rp)
end
function rt:Export()
return btools.Export({rp})
end
local e = setmetatable(rt,{__newindex = function(self,i,v)
btools.SetEffectProperties({parent},cn,{[i] = v})
end})
return e
end
end}
return env,classes,owner
